---
kind: Template
apiVersion: v1
metadata:
  annotations:
    version: "1.0"
    openshift.io/display-name: lab-manager
  name: lab-manager
labels:
  template: labe-manager
message: |-
  lab manager is deployed
parameters:
  - name: APPLICATION_RELEASE
    required: true
  - name: APPLICATION_NAME
    value: lab-manager
    required: true
  - name: IMAGE_STREAM_NAMESPACE
    value: openshift
    required: true
  - name: IMAGE_STREAM_NAME
    value: "fuse7-java-openshift"
    required: true
  - name: IMAGE_STREAM_TAG
    value: "1.2-12"
    required: true
objects:
  - kind: Service
    apiVersion: v1
    spec:
      ports:
        - name: http
          port: 8080
          targetPort: 8080
      selector:
        application: "${APPLICATION_NAME}"
    metadata:
      name: "${APPLICATION_NAME}"
      labels:
        application: "${APPLICATION_NAME}"
        service: "${APPLICATION_NAME}"
  - kind: Route
    apiVersion: v1
    id: "${APPLICATION_NAME}-http"
    metadata:
      name: "${APPLICATION_NAME}"
      labels:
        application: "${APPLICATION_NAME}"
        service: "${APPLICATION_NAME}"
    spec:
      to:
        name: "${APPLICATION_NAME}"
      port:
        targetPort: http
      tls:
        termination: edge
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: "${APPLICATION_NAME}"
      labels:
        application: "${APPLICATION_NAME}"
        service: "${APPLICATION_NAME}"
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: "${APPLICATION_NAME}"
      labels:
        application: "${APPLICATION_NAME}"
        service: "${APPLICATION_NAME}"
    spec:
      successfulBuildsHistoryLimit: 2
      failedBuildsHistoryLimit: 2
      source:
        type: Binary
      strategy:
        type: Source
        sourceStrategy:
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "openshift"
          forcePull: true
          from:
            kind: ImageStreamTag
            namespace: "${IMAGE_STREAM_NAMESPACE}"
            name: "${IMAGE_STREAM_NAME}:${IMAGE_STREAM_TAG}"
      output:
        to:
          kind: ImageStreamTag
          name: "${APPLICATION_NAME}:latest"
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: "${APPLICATION_NAME}"
      labels:
        application: "${APPLICATION_NAME}"
        service: "${APPLICATION_NAME}"
    spec:
      replicas: 0
      strategy:
        type: Rolling
      selector:
        matchLabels:
          application: "${APPLICATION_NAME}"
          service: "${APPLICATION_NAME}"
      template:
        metadata:
          name: "${APPLICATION_NAME}"
          labels:
            application: "${APPLICATION_NAME}"
            service: "${APPLICATION_NAME}"
        spec:
          containers:
            - name: "${APPLICATION_NAME}"
              image: "${APPLICATION_NAME}"
              imagePullPolicy: Always
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 60
                timeoutSeconds: 2
                periodSeconds: 15
                failureThreshold: 3
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 60
                timeoutSeconds: 2
                periodSeconds: 30
                failureThreshold: 6
              ports:
                - name: jolokia
                  containerPort: 8778
                  protocol: TCP
                - name: http
                  containerPort: 8080
                  protocol: TCP
              env: {}
